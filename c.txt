from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task
import agentstack

# 预处理：兼容不同名字的 Code‑Interpreter key，避免 get() 调用
_ci_tools = []
for _name in ("code-interpreter", "code_interpreter", "codeInterpreter"):
    try:
        _ci_tools = agentstack.tools[_name]
        break
    except KeyError:
        continue


@CrewBase
class WebscraperCrew:
    """web_scraper crew（彻底移除 Firecrawl，改用 Code‑Interpreter + Neon）"""

    # ---------------------- Agents ---------------------- #
    @agent
    def web_scraper(self) -> Agent:
        return Agent(
            config=self.agents_config["web_scraper"],
            tools=[*_ci_tools, *agentstack.tools["neon"]],
            verbose=True,
        )

    @agent
    def data_extractor(self) -> Agent:
        return Agent(
            config=self.agents_config["data_extractor"],
            tools=[*_ci_tools, *agentstack.tools["neon"]],
            verbose=True,
        )

    @agent
    def content_storer(self) -> Agent:
        return Agent(
            config=self.agents_config["content_storer"],
            tools=[*agentstack.tools["neon"]],  # 存储只需数据库相关
            verbose=True,
        )

    # ---------------------- Tasks ---------------------- #
    @task
    def scrape_site(self) -> Task:
        return Task(
            config=self.tasks_config["scrape_site"],
        )

    @task
    def extract(self) -> Task:
        return Task(
            config=self.tasks_config["extract"],
        )

    @task
    def store(self) -> Task:
        return Task(
            config=self.tasks_config["store"],
        )

    # ---------------------- Crew ---------------------- #
    @crew
    def crew(self) -> Crew:
        """Creates the Webscraper crew"""
        return Crew(
            agents=self.agents,
            tasks=self.tasks,
            process=Process.sequential,
            verbose=True,
        )
